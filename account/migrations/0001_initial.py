# Generated by Django 4.2.7 on 2025-10-30 13:56

import django.core.validators
import django.utils.timezone
from django.db import migrations, models

import account.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="LibraryUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "library_card_number",
                    models.CharField(
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{6}$", "The library card number must contain exactly six digits."
                            )
                        ],
                    ),
                ),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.EmailField(blank=True, max_length=254)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False, help_text="Designates whether the user can log into this admin site."
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Designates whether this user should be treated as active."
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",  # noqa
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "ordering": ["library_card_number"],
            },
            managers=[
                ("objects", account.models.LibraryUserManager()),
            ],
        ),
    ]
